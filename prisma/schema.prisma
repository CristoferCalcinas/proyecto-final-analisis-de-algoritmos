generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model curso {
  id                Int                 @id @default(autoincrement())
  codigo            String?             @unique @db.VarChar(10)
  nombre            String?             @db.VarChar(50)
  descripcion       String?
  creditos          Int?                @db.SmallInt
  cursos_profesores cursos_profesores[]
  inscripciones     inscripciones[]
}

model cursos_profesores {
  id          Int         @id @default(autoincrement())
  id_curso    Int?
  id_profesor Int?
  curso       curso?      @relation(fields: [id_curso], references: [id], onDelete: NoAction, onUpdate: NoAction)
  profesores  profesores? @relation(fields: [id_profesor], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model estudiante {
  id               String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nombre           String?         @db.VarChar(20)
  apellido         String?         @db.VarChar(30)
  carnet           String?         @unique @db.VarChar(20)
  fecha_nacimiento DateTime?       @db.Date
  email            String?         @unique @db.VarChar(100)
  telefono         String?         @db.VarChar(15)
  direccion        String?         @db.VarChar(200)
  id_facultad      Int?
  facultad         facultad?       @relation(fields: [id_facultad], references: [id], onUpdate: NoAction)
  inscripciones    inscripciones[]
}

model facultad {
  id          Int          @id @default(autoincrement())
  nombre      String?      @unique @db.VarChar(40)
  descripcion String?
  estudiante  estudiante[]
}

model inscripciones {
  id                Int         @id @default(autoincrement())
  id_estudiante     String?     @db.Uuid
  id_curso          Int?
  fecha_inscripcion DateTime?   @db.Date
  estado            Boolean?
  curso             curso?      @relation(fields: [id_curso], references: [id], onDelete: NoAction, onUpdate: NoAction)
  estudiante        estudiante? @relation(fields: [id_estudiante], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model profesores {
  id                Int                 @id @default(autoincrement())
  nombre            String?             @db.VarChar(20)
  apellido          String?             @db.VarChar(30)
  email             String?             @unique @db.VarChar(100)
  telefono          String?             @db.VarChar(15)
  direccion         String?             @db.VarChar(200)
  cursos_profesores cursos_profesores[]
}
